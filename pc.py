import paho.mqtt.client as mqtt
import time
import threading

# C·∫•u h√¨nh MQTT Broker
MQTT_BROKER = "mqtt.gtechdn.vn"
MQTT_PORT = 1883
MQTT_KEEPALIVE = 60
MQTT_TOPIC_SUBSCRIBE = "device/control"
MQTT_TOPIC_PUBLISH = "device/status"

# Bi·∫øn ki·ªÉm so√°t k·∫øt n·ªëi
is_connected = False

def on_connect(client, userdata, flags, rc):
    """H√†m x·ª≠ l√Ω khi k·∫øt n·ªëi th√†nh c√¥ng"""
    global is_connected
    if rc == 0:
        print("‚úÖ K·∫øt n·ªëi MQTT th√†nh c√¥ng!")
        is_connected = True
        client.subscribe(MQTT_TOPIC_SUBSCRIBE)
    else:
        print(f"‚ö†Ô∏è L·ªói k·∫øt n·ªëi MQTT, m√£ l·ªói: {rc}")

def on_disconnect(client, userdata, rc):
    """H√†m x·ª≠ l√Ω khi m·∫•t k·∫øt n·ªëi"""
    global is_connected
    is_connected = False
    print("üî¥ M·∫•t k·∫øt n·ªëi MQTT. ƒêang th·ª≠ k·∫øt n·ªëi l·∫°i...")
    while not is_connected:
        try:
            client.reconnect()
            time.sleep(5)  # Ch·ªù tr∆∞·ªõc khi th·ª≠ l·∫°i
        except Exception as e:
            print("‚ùå L·ªói k·∫øt n·ªëi l·∫°i MQTT:", str(e))
            time.sleep(5)

def on_message(client, userdata, msg):
    """H√†m x·ª≠ l√Ω khi nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn"""
    print(f"üì© Nh·∫≠n l·ªánh t·ª´ MQTT: {msg.topic} - {msg.payload.decode()}")

def publish_status():
    """H√†m g·ª≠i tr·∫°ng th√°i thi·∫øt b·ªã ƒë·ªãnh k·ª≥"""
    while True:
        if is_connected:
            client.publish(MQTT_TOPIC_PUBLISH, "Thi·∫øt b·ªã ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng")
        time.sleep(10)  # G·ª≠i m·ªói 10 gi√¢y

# T·∫°o client MQTT
client = mqtt.Client()
client.on_connect = on_connect
client.on_disconnect = on_disconnect
client.on_message = on_message

# K·∫øt n·ªëi MQTT Broker
try:
    client.connect(MQTT_BROKER, MQTT_PORT, MQTT_KEEPALIVE)
except Exception as e:
    print("‚ùå L·ªói k·∫øt n·ªëi MQTT:", str(e))
    exit(1)

# Ch·∫°y lu·ªìng g·ª≠i tr·∫°ng th√°i ri√™ng ƒë·ªÉ kh√¥ng ch·∫∑n lu·ªìng ch√≠nh
status_thread = threading.Thread(target=publish_status, daemon=True)
status_thread.start()

# Ch·∫°y v√≤ng l·∫∑p ch√≠nh ƒë·ªÉ duy tr√¨ k·∫øt n·ªëi MQTT
client.loop_forever()
